name: Build ANGLE for Android

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up environment
        run: |
          sudo apt-get update
          sudo apt-get install -y python3 python3-pip ninja-build clang unzip
          pip3 install gn
      - name: Install depot_tools
        run: |
          git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
          echo "$GITHUB_WORKSPACE/depot_tools" >> $GITHUB_PATH
      - name: Configure .gclient
        run: |
          cat <<EOL > .gclient
          solutions = [
              {
                  "name": "angle",
                  "url": "https://github.com/google/angle.git",
                  "deps_file": "DEPS",
                  "managed": False,
                  "custom_deps": {
                      "angle/third_party/VK-GL-CTS/src": None,
                      "angle/third_party/llvm/src": None,
                  },
                  "custom_vars": {},
              },
          ]
          target_os = ['android']
          EOL
      - name: Cache ANGLE dependencies
        id: cache-angle
        uses: actions/cache@v3
        with:
          path: |
            angle/third_party
            angle/.git
          key: angle-deps-${{ runner.os }}-${{ hashFiles('.gclient') }}
          restore-keys: |
            angle-deps-${{ runner.os }}-
      - name: Clean up googletest directory
        run: |
          rm -rf angle/third_party/googletest
      - name: Initialize ANGLE repository
        run: |
          if [[ ! -d "angle/third_party" || ! -d "angle/.git" ]]; then
            sleep 10
            gclient sync
          else
            echo "Using cached dependencies."
          fi
      - name: Install Android NDK manually
        run: |
          mkdir -p $ANDROID_HOME/ndk
          curl -o ndk.zip https://dl.google.com/android/repository/android-ndk-r25b-linux.zip
          unzip ndk.zip -d $ANDROID_HOME/ndk
          mv $ANDROID_HOME/ndk/android-ndk-r25b $ANDROID_HOME/ndk/25.1.8937393
          rm ndk.zip
          echo "NDK installed at $ANDROID_HOME/ndk/25.1.8937393"
      - name: Set NDK environment variables
        run: |
          echo "ANDROID_NDK_HOME=$ANDROID_HOME/ndk/25.1.8937393" >> $GITHUB_ENV
          echo "PATH=$ANDROID_HOME/ndk/25.1.8937393/toolchains/llvm/prebuilt/linux-x86_64/bin:$PATH" >> $GITHUB_ENV
      - name: Generate build files for Android
        run: |
          export ANDROID_NDK_HOME=$ANDROID_HOME/ndk/25.1.8937393
          cd angle
          gn gen out/Android --args='
            target_os = "android"
            target_cpu = "arm64"
            is_component_build = false
            is_debug = true
            angle_assert_always_on = true
          '
      - name: Build ANGLE APK
        run: |
          export ANDROID_NDK_HOME=$ANDROID_HOME/ndk/25.1.8937393
          cd angle
          autoninja -C out/Android angle_apks
      - name: List files in out/Android
        run: |
          cd angle/out/Android
          ls -la
      - name: Upload APK as artifact
        uses: actions/upload-artifact@v4
        with:
          name: AngleLibraries.apk
          path: angle/out/Android/apks/AngleLibraries.apk
